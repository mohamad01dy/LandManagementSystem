openapi: 3.0.0
info:
  title: Land Management API
  version: 1.0.0
  description: Basic API description

paths:
  /test:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - test
      summary: say hello
      description: say hello
      operationId: sayHello
      responses:
        '200':
          description: Successful hello response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Hello World
        '500':
          description: Internal server error
  /user:
    post:
      tags:
        - User
      summary: Create a new User
      description: User details sent from frontend are used to create a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Invalid Input
  /auth/login:
    post:
      operationId: login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Land:
      type: object
      description: Land created on the frontend level containing all details
      properties:
        id:
          type: integer
        name:
          type: string
        location:
          type: string
        surface:
          type: number
          format: float
        usageDescr:
          type: string
        price:
          type: integer
        contact:
          type: string
        ownerHistory:
          type: array
          items:
            type: string
    User:
      type: object
      description: User and owner of properties
      properties:
        id:
          type: integer
        name:
          type: string
        age:
          type: integer
        address:
          type: string
        email:
          type: string
        password:
          type: string
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
security:
  - bearerAuth: []