import org.openapitools.generator.gradle.plugin.tasks.ValidateTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator'
	id 'com.diffplug.spotless' version '7.0.4'
}




group = 'com.land'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(24)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

spotless {
	enforceCheck = false
	java {
		googleJavaFormat('1.27.0')
		target 'src/*/java/**/*.java'
		targetExclude "${layout.buildDirectory.get()}/generated/**/*.java"
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
<<<<<<< Updated upstream
=======
	implementation "org.mapstruct:mapstruct:1.5.5.Final"           // Use MapStruct annotations
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"  // Generate mapper implementations at compile-time
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

>>>>>>> Stashed changes

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

openApiGenerate {
	generatorName.set("spring")
	inputSpec.set("${projectDir}/src/main/resources/openapi.yaml")
	outputDir.set("${layout.buildDirectory.get()}/generated")
	apiPackage.set("com.land.backend.api")
	modelPackage.set("com.land.backend.dto")
	skipValidateSpec.set(false)

	configOptions.set([
			'sourceFolder'           : 'src/main/java',
			'dateLibrary'            : 'java8',
			'interfaceOnly'          : 'true',
			'delegatePattern'        : 'false',
			'useSpringBoot3'         : 'true',
			'useBeanValidation'      : 'true',
			'useTags'                : 'true',
			'openApiNullable'        : 'false',
			'generateApiTests'       : 'false',
			'generateApiPom'         : 'false',
			'generatePom'            : 'false',
			'generateSupportingFiles': 'false',
			'artifactVersion'        : '0.0.1-SNAPSHOT',
			'useLombok'              : 'true',
	])
	modelNameSuffix.set("Dto")
}

sourceSets {
	main {
		java {
			srcDirs += "${buildDir}/generated/${openApiGenerate.configOptions.get().sourceFolder}"
		}
	}
}

tasks.register('openApiValidateSpec', ValidateTask) {
	inputSpec.set(file("${projectDir}/src/main/resources/openapi.yaml").absolutePath)
}


tasks.named('compileJava') {
	dependsOn tasks.named('openApiGenerate')
}

